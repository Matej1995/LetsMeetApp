plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
    id 'com.google.devtools.ksp' version '1.8.10-1.0.9'
    id "com.google.protobuf" version "0.8.17"
}

kotlin {
    sourceSets {
        debug {
            kotlin.srcDir("build/generated/ksp/debug/kotlin")
        }
        release {
            kotlin.srcDir("build/generated/ksp/release/kotlin")
        }
    }
}

android {
    namespace 'cz.sandera.letsmeet'
    compileSdk 33

    defaultConfig {
        applicationId "cz.sandera.letsmeet"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"



        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation": "$projectDir/schemas".toString(),
                        "room.incremental":"true"
                ]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        applicationVariants.all { variant ->
            kotlin.sourceSets {
                getByName(variant.name) {
                    kotlin.srcDir("build/generated/ksp/${variant.name}/kotlin")
                }
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation 'androidx.activity:activity-compose:1.6.1'
    implementation "androidx.compose.ui:ui:$compose_ui_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_ui_version"
    implementation 'androidx.compose.material:material:1.3.1'
    implementation 'androidx.datastore:datastore-preferences-core:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_ui_version"

    // Compose
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0"

    //Dagger - Hilt
    implementation "com.google.dagger:hilt-android:2.45"
    kapt "com.google.dagger:hilt-android-compiler:2.45"

    // Asi není potřeba
    kapt "androidx.hilt:hilt-compiler:1.0.0"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_vesrion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_vesrion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    implementation "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4"

    // Moshi
    //implementation "com.squareup.moshi:moshi:1.14.0"
    //kapt "com.squareup.moshi:moshi-kotlin-codegen:1.8.0"

    // Location Services
    implementation 'com.google.android.gms:play-services-location:21.0.1'

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Splash screen
    implementation 'androidx.core:core-splashscreen:1.0.0'

    // Jetpack compose navigation
    implementation 'io.github.raamcosta.compose-destinations:core:1.8.33-beta'
    ksp 'io.github.raamcosta.compose-destinations:ksp:1.8.33-beta'

    // Compose preview debuging
    debugImplementation "androidx.compose.ui:ui-tooling:1.3.3"
    implementation "androidx.compose.ui:ui-tooling-preview:1.3.3"

    // Data store with protobuf
    implementation  "androidx.datastore:datastore:1.0.0"
    // Starting from Protobuf 3.8.0, use the lite runtime library
    implementation  "com.google.protobuf:protobuf-javalite:3.18.0"
}

protobuf {
    // Configures the Protobuf compilation and the protoc executable
    protoc {
        // Downloads from the repositories
        artifact = "com.google.protobuf:protoc:3.14.0"
    }

    // Generates the java Protobuf-lite code for the Protobufs in this project
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                // Configures the task output type
                java {
                    // Java Lite has smaller code size and is recommended for Android
                    option 'lite'
                }
            }
        }
    }
}